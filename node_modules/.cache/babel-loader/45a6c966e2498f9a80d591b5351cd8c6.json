{"ast":null,"code":"import _objectSpread from \"/home/sanji/lighthouse/portfolio/kansd1401.github.io/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sanji/lighthouse/portfolio/kansd1401.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sanji/lighthouse/portfolio/kansd1401.github.io/src/components/Contact/contactCard.js\";\nimport React, { Fragment, useState } from 'react';\nimport { Grid, Card, Container, CardContent, TextField, FormHelperText, FormControlLabel, Checkbox, Fab, Typography, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Info from './Info';\nimport Fade from 'react-reveal/Fade';\nconst INITIAL_STATE = {\n  name: \"\",\n  email: \"\",\n  subject: \"\",\n  message: \"\",\n  copyEmailStatus: false\n};\nconst styleHook = makeStyles(theme => ({\n  card: {\n    maxWidth: 600,\n    boxShadow: \"0 5px 10px rgba(154,160,185,.05), 0 15px 40px rgba(166,173,201,.2)\",\n    backgroundColor: \"#fbfbfb\"\n  },\n  fab: {\n    marginLeft: \"auto\"\n  }\n}));\n\nfunction ContactCard(props) {\n  const _useState = useState(INITIAL_STATE),\n        _useState2 = _slicedToArray(_useState, 2),\n        emailInfo = _useState2[0],\n        setEmailInfo = _useState2[1];\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    alert(`An email has been sent to Abdul Rehman`);\n    console.log(emailInfo);\n    const payload = Object.assign({}, emailInfo);\n\n    (async () => {\n      const rawResponse = await fetch('https://us-central1-microservices-264117.cloudfunctions.net/sendMessage', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      console.log(rawResponse); //! important\n    })(); //Execute immidiately\n\n\n    setEmailInfo(INITIAL_STATE);\n  }; // # handeling state changes\n  // ! for document purposes. We can choose to create individual functions to handle changes\n  // const handleEmailChange = (val)=>{\n  //   setEmailInfo((previousState) => ({ ...previousState, email: val }));\n  // }\n\n\n  const handleChange = e => {\n    //? This 'if' only exists because i was too dumb to figure out best way to support the checkbox =/\n    const temp = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n\n    if (e.target.type === \"checkbox\") {\n      console.log(\"event is a checkbox\");\n      setEmailInfo(previousState => _objectSpread({}, previousState, {\n        copyEmailStatus: temp\n      }));\n    } else {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      setEmailInfo(previousState => _objectSpread({}, previousState, {\n        [name]: value\n      }));\n    }\n  };\n\n  const useStyle = styleHook();\n  return React.createElement(Fade, {\n    right: true,\n    cascade: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: useStyle.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    xs: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: 'span',\n    variant: \"h4\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Box, {\n    fontWeight: \"fontWeightLight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Don't be a lurker, get in touch!\")), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: emailInfo.name,\n    fullWidth: true,\n    id: \"name-input\",\n    \"aria-describedby\": \"name-helper-text\",\n    name: \"name\",\n    label: \"Name\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"name-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"Your name (Optional)\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    fullWidth: true,\n    id: \"email-input\",\n    \"aria-describedby\": \"email-helper-text\",\n    name: \"email\",\n    label: \"Email\",\n    value: emailInfo.email,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"email-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Your email (Optional)\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: emailInfo.subject,\n    id: \"subject-input\",\n    variant: \"outlined\",\n    \"aria-describedby\": \"my-helper-text\",\n    name: \"subject\",\n    fullWidth: true,\n    label: \"Subject\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"subject-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Email Subject (Required)\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    value: emailInfo.message,\n    id: \"message-input\",\n    rows: \"15\",\n    multiline: true,\n    \"aria-describedby\": \"message-helper-text\",\n    fullWidth: true,\n    variant: \"outlined\",\n    label: \"Message\",\n    name: \"message\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(FormHelperText, {\n    id: \"message-helper-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Required.\")), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      color: \"primary\",\n      name: \"copyEmailStatus\",\n      checked: emailInfo.copyEmailStatus,\n      disabled: true,\n      onChange: handleChange,\n      value: \"yes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }),\n    label: \"Send me a copy of the email (Temp disabled)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    className: useStyle.fab,\n    md: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    variant: \"extended\",\n    size: \"large\",\n    color: \"primary\",\n    type: \"submit\",\n    value: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"send message\", React.createElement(ArrowForwardIosIcon, {\n    fontSize: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }))))))));\n}\n\nexport default ContactCard;","map":{"version":3,"sources":["/home/sanji/lighthouse/portfolio/kansd1401.github.io/src/components/Contact/contactCard.js"],"names":["React","Fragment","useState","Grid","Card","Container","CardContent","TextField","FormHelperText","FormControlLabel","Checkbox","Fab","Typography","Box","makeStyles","ArrowForwardIosIcon","Info","Fade","INITIAL_STATE","name","email","subject","message","copyEmailStatus","styleHook","theme","card","maxWidth","boxShadow","backgroundColor","fab","marginLeft","ContactCard","props","emailInfo","setEmailInfo","handleSubmit","evt","preventDefault","alert","console","log","payload","Object","assign","rawResponse","fetch","method","headers","body","JSON","stringify","handleChange","e","temp","target","type","checked","value","previousState","useStyle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,SAArB,EAAgCC,WAAhC,EAA6CC,SAA7C,EAAwDC,cAAxD,EAAwEC,gBAAxE,EAA0FC,QAA1F,EAAoGC,GAApG,EAAyGC,UAAzG,EAAqHC,GAArH,QAAgI,mBAAhI;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,IAAI,EAAE,EADY;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,OAAO,EAAE,EAHS;AAIlBC,EAAAA,OAAO,EAAE,EAJS;AAKlBC,EAAAA,eAAe,EAAE;AALC,CAAtB;AAQA,MAAMC,SAAS,GAAGV,UAAU,CAACW,KAAK,KAAK;AACnCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,GADN;AAEFC,IAAAA,SAAS,EAAE,oEAFT;AAGFC,IAAAA,eAAe,EAAE;AAHf,GAD6B;AAMjCC,EAAAA,GAAG,EAAE;AACHC,IAAAA,UAAU,EAAE;AADT;AAN4B,CAAL,CAAN,CAA5B;;AAYA,SAASC,WAAT,CAAqBC,KAArB,EACA;AAAA,oBAEsC/B,QAAQ,CAACgB,aAAD,CAF9C;AAAA;AAAA,QAEWgB,SAFX;AAAA,QAEsBC,YAFtB;;AAKI,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACC,cAAJ;AAEAC,IAAAA,KAAK,CAAE,wCAAF,CAAL;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AAEA,UAAMQ,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,SAAlB,CAAhB;;AAEA,KAAC,YAAY;AACX,YAAMW,WAAW,GAAG,MAAMC,KAAK,CAAC,yEAAD,EAA4E;AACzGC,QAAAA,MAAM,EAAE,MADiG;AAEzGC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAFgG;AAMzGC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,OAAf;AANmG,OAA5E,CAA/B;AASAF,MAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ,EAVW,CAUc;AAE1B,KAZD,IAT4B,CAqBtB;;;AAENV,IAAAA,YAAY,CAACjB,aAAD,CAAZ;AACD,GAxBD,CALJ,CAgCI;AACA;AACA;AACA;AACA;;;AAGA,QAAMkC,YAAY,GAAGC,CAAC,IAAI;AAExB;AACA,UAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,IAAT,KAAkB,UAAlB,GAA+BH,CAAC,CAACE,MAAF,CAASE,OAAxC,GAAkDJ,CAAC,CAACE,MAAF,CAASG,KAAxE;;AACA,QAAIL,CAAC,CAACE,MAAF,CAASC,IAAT,KAAkB,UAAtB,EAAkC;AAChChB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAN,MAAAA,YAAY,CAAEwB,aAAD,sBAAyBA,aAAzB;AAAwCpC,QAAAA,eAAe,EAAE+B;AAAzD,QAAD,CAAZ;AACD,KAHD,MAIK;AAAA,wBACqBD,CAAC,CAACE,MADvB;AAAA,YACKpC,IADL,aACKA,IADL;AAAA,YACWuC,KADX,aACWA,KADX;AAEHvB,MAAAA,YAAY,CAAEwB,aAAD,sBAAyBA,aAAzB;AAAwC,SAACxC,IAAD,GAAQuC;AAAhD,QAAD,CAAZ;AAED;AAEF,GAdD;;AAgBA,QAAME,QAAQ,GAAGpC,SAAS,EAA1B;AAEA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,OAAO,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEoC,QAAQ,CAAClC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEU,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAE,MAAvB;AAA+B,IAAA,OAAO,EAAC,IAAvC;AAA4C,IAAA,YAAY,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,UAAU,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EASE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEF,SAAS,CAACf,IAA5B;AAAkC,IAAA,SAAS,MAA3C;AAA4C,IAAA,EAAE,EAAC,YAA/C;AAA4D,wBAAiB,kBAA7E;AAAgG,IAAA,IAAI,EAAC,MAArG;AAA4G,IAAA,KAAK,EAAC,MAAlH;AAAyH,IAAA,QAAQ,EAAEiC,YAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,kBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,CATF,EAaE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,EAAE,EAAC,aAAxB;AAAsC,wBAAiB,mBAAvD;AAA2E,IAAA,IAAI,EAAC,OAAhF;AAAwF,IAAA,KAAK,EAAC,OAA9F;AAAsG,IAAA,KAAK,EAAElB,SAAS,CAACd,KAAvH;AAA8H,IAAA,QAAQ,EAAEgC,YAAxI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFF,CAbF,EAkBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAElB,SAAS,CAACb,OAA5B;AAAqC,IAAA,EAAE,EAAC,eAAxC;AAAwD,IAAA,OAAO,EAAC,UAAhE;AAA2E,wBAAiB,gBAA5F;AAA6G,IAAA,IAAI,EAAC,SAAlH;AAA4H,IAAA,SAAS,MAArI;AAAsI,IAAA,KAAK,EAAC,SAA5I;AAAsJ,IAAA,QAAQ,EAAE+B,YAAhK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,CAlBF,EAsBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAElB,SAAS,CAACZ,OAA5B;AAAqC,IAAA,EAAE,EAAC,eAAxC;AAAwD,IAAA,IAAI,EAAC,IAA7D;AAAkE,IAAA,SAAS,EAAE,IAA7E;AAAmF,wBAAiB,qBAApG;AAA0H,IAAA,SAAS,MAAnI;AAAoI,IAAA,OAAO,EAAC,UAA5I;AAAuJ,IAAA,KAAK,EAAC,SAA7J;AAAuK,IAAA,IAAI,EAAC,SAA5K;AAAsL,IAAA,QAAQ,EAAE8B,YAAhM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,qBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CAtBF,EA2BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,iBAA/B;AAAiD,MAAA,OAAO,EAAElB,SAAS,CAACX,eAApE;AAAqF,MAAA,QAAQ,MAA7F;AAA8F,MAAA,QAAQ,EAAE6B,YAAxG;AAAsH,MAAA,KAAK,EAAC,KAA5H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADX;AAEE,IAAA,KAAK,EAAC,6CAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3BF,EAiCE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,SAAS,EAAEQ,QAAQ,CAAC9B,GAA/B;AAAoC,IAAA,EAAE,EAAE,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,UAAb;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAqC,IAAA,KAAK,EAAC,SAA3C;AAAqD,IAAA,IAAI,EAAC,QAA1D;AAAmE,IAAA,KAAK,EAAC,QAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAjCF,CADF,CADF,CADF,CADA,CADJ;AAkDH;;AAED,eAAeE,WAAf","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { Grid, Card, Container, CardContent, TextField, FormHelperText, FormControlLabel, Checkbox, Fab, Typography, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport Info from './Info';\nimport Fade from 'react-reveal/Fade';\nconst INITIAL_STATE = {\n    name: \"\",\n    email: \"\",\n    subject: \"\",\n    message: \"\",\n    copyEmailStatus: false\n  }\n  \nconst styleHook = makeStyles(theme => ({\n    card: {\n      maxWidth: 600,\n        boxShadow: \"0 5px 10px rgba(154,160,185,.05), 0 15px 40px rgba(166,173,201,.2)\",\n        backgroundColor: \"#fbfbfb\"\n      },\n      fab: {\n        marginLeft: \"auto\",\n      }\n}));\n\n\nfunction ContactCard(props)\n{\n  \n    const [emailInfo, setEmailInfo] = useState(INITIAL_STATE);\n  \n  \n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n  \n      alert(`An email has been sent to Abdul Rehman`);\n  \n      console.log(emailInfo);\n  \n      const payload = Object.assign({}, emailInfo);\n  \n      (async () => {\n        const rawResponse = await fetch('https://us-central1-microservices-264117.cloudfunctions.net/sendMessage', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(payload)\n        });\n  \n        console.log(rawResponse);//! important\n  \n      })(); //Execute immidiately\n  \n      setEmailInfo(INITIAL_STATE);\n    }\n  \n  \n    // # handeling state changes\n    // ! for document purposes. We can choose to create individual functions to handle changes\n    // const handleEmailChange = (val)=>{\n    //   setEmailInfo((previousState) => ({ ...previousState, email: val }));\n    // }\n  \n  \n    const handleChange = e => {\n  \n      //? This 'if' only exists because i was too dumb to figure out best way to support the checkbox =/\n      const temp = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\n      if (e.target.type === \"checkbox\") {\n        console.log(\"event is a checkbox\")\n        setEmailInfo((previousState) => ({ ...previousState, copyEmailStatus: temp }));\n      }\n      else {\n        const { name, value } = e.target;\n        setEmailInfo((previousState) => ({ ...previousState, [name]: value }));\n  \n      }\n  \n    }\n\n    const useStyle = styleHook();\n\n    return(\n        <Fade right cascade>\n        <Card className={useStyle.card}>\n          <CardContent>\n            <form onSubmit={handleSubmit}>\n              <Grid container spacing={3} >\n                <Grid item sm={12} xs={12} md={12}>\n                  <Typography component={'span'} variant=\"h4\" gutterBottom>\n                    <Box fontWeight=\"fontWeightLight\" >\n                      Don't be a lurker, get in touch!\n                      </Box>\n                  </Typography>\n                  <hr></hr>\n                </Grid>\n                <Grid item xs={12} sm={12} md={6}>\n                  <TextField value={emailInfo.name} fullWidth id=\"name-input\" aria-describedby=\"name-helper-text\" name=\"name\" label=\"Name\" onChange={handleChange} />\n                  <FormHelperText id=\"name-helper-text\">Your name (Optional)</FormHelperText>\n                </Grid>\n                <Grid item xs={12} sm={12} md={6}>\n                  <TextField fullWidth id=\"email-input\" aria-describedby=\"email-helper-text\" name=\"email\" label=\"Email\" value={emailInfo.email} onChange={handleChange} />\n                  <FormHelperText id=\"email-helper-text\">Your email (Optional)</FormHelperText>\n\n                </Grid>\n                <Grid item xs={12} sm={12} md={12}>\n                  <TextField value={emailInfo.subject} id=\"subject-input\" variant=\"outlined\" aria-describedby=\"my-helper-text\" name=\"subject\" fullWidth label=\"Subject\" onChange={handleChange} />\n                  <FormHelperText id=\"subject-helper-text\">Email Subject (Required)</FormHelperText>\n                </Grid>\n                <Grid item xs={12} sm={12} md={12}>\n                  <TextField value={emailInfo.message} id=\"message-input\" rows=\"15\" multiline={true} aria-describedby=\"message-helper-text\" fullWidth variant=\"outlined\" label=\"Message\" name=\"message\" onChange={handleChange} />\n                  <FormHelperText id=\"message-helper-text\">Required.</FormHelperText>\n\n                </Grid>\n                <Grid item xs={12}>\n                  <FormControlLabel\n                    control={<Checkbox color=\"primary\" name=\"copyEmailStatus\" checked={emailInfo.copyEmailStatus} disabled onChange={handleChange} value=\"yes\" />}\n                    label=\"Send me a copy of the email (Temp disabled)\"\n                  />\n                </Grid>\n                <Grid item className={useStyle.fab} md={4}>\n                  <Fab variant=\"extended\" size=\"large\" color=\"primary\" type=\"submit\" value=\"submit\">\n                    send message\n                    <ArrowForwardIosIcon fontSize=\"small\" />\n                  </Fab>\n                </Grid>\n              </Grid>\n            </form>\n          </CardContent>\n        </Card>\n        </Fade>\n    )\n}\n\nexport default ContactCard;"]},"metadata":{},"sourceType":"module"}