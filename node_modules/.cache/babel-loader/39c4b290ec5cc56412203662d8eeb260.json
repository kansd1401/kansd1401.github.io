{"ast":null,"code":"import _slicedToArray from\"I:\\\\C0de\\\\portfolio\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from\"react\";import{Box,ListItem,Grid,Card,CardActionArea,CardMedia,Button,Fab,ButtonGroup,Modal,Typography}from\"@material-ui/core\";import{makeStyles}from\"@material-ui/core/styles\";import FavoriteBorderIcon from\"@material-ui/icons/FavoriteBorder\";import ArrowForwardIosIcon from\"@material-ui/icons/ArrowForwardIos\";import ImageModal from\"./ImageModal\";import Fade from\"react-reveal/Fade\";import Thumbnail from\"./thumbnail/thumbnail\";var cssStyles=makeStyles(function(theme){return{root:{flexGrow:1},content:{padding:\"10px\"},listItem:{marginBottom:\"70px\"},debugStyle:{borderStyle:\"solid\",padding:\"10px\"},paper:{margin:\"auto\",borderRadius:\"2em\",maxWidth:768,maxHeight:1024,textAlign:\"center\",backgroundColor:\"#FFFFFF\",boxShadow:\"5px 5px 10px 10px rgba(154,160,185,.05), 0 15px 40px rgba(166,173,201,.2)\",\"&:hover\":{//Make play icon appear\n}},tagButton:{fontSize:\"12px\",color:\"#39739d\",backgroundColor:\"#e1ecf4\",borderColor:\"#e1ecf4\",margin:\"0.2rem\"},buttonGroup:{flexWrap:\"wrap\"},test:{objectFit:\"fill\",height:\"350px\"},playButton:{position:\"absolute\",top:\"50%\",left:\"50%\",transform:\"translate(-50%, -50%)\",opacity:0,\"&:hover\":{opacity:1}}};});function RenderItemWhole(props){var useStyle=cssStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showDialog=_useState2[0],setShowDialog=_useState2[1];var handleCardClick=function handleCardClick(event){// setShowDialog(showDialog => !showDialog);\n};return React.createElement(Fragment,null,React.createElement(ListItem,{className:useStyle.listItem},React.createElement(\"div\",{className:useStyle.root},showDialog&&React.createElement(ImageModal,{path:props.project.tileTile.media,handler:handleCardClick}),React.createElement(Grid,{container:true,spacing:10,direction:\"row\"},React.createElement(Grid,{item:true,md:4,sm:12,xs:12},React.createElement(\"h4\",null,props.project.tileTile.title),React.createElement(Typography,{variant:\"body1\"},React.createElement(Box,null,props.project.tileTile.description)),React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,className:useStyle.content,md:12},React.createElement(Grid,{container:true,direction:\"row\",spacing:3},React.createElement(Grid,{item:true,md:6},React.createElement(Button,{variant:\"outlined\",target:\"_blank\",href:props.project.tileTile.projectLink},\"GitHub\")),props.project.tileTile.demoLink!==\"\"&&React.createElement(Grid,{item:true,md:6},React.createElement(Fab,{href:props.project.tileTile.demoLink,target:\"_blank\",variant:\"extended\",size:\"medium\",color:\"primary\"},\"Demo\",React.createElement(ArrowForwardIosIcon,{fontSize:\"small\"}))))))),React.createElement(Grid,{item:true,md:8,sm:12,xs:12},React.createElement(Card,{className:useStyle.paper},React.createElement(CardActionArea,{onClick:handleCardClick},React.createElement(Thumbnail,{source:process.env.PUBLIC_URL+props.project.tileTile.thumbnail})))),React.createElement(Grid,{item:true,md:12},React.createElement(ButtonGroup,{className:useStyle.buttonGroup,size:\"small\",\"aria-label\":\"small outlined button group\"},props.project.tileTile.tags.map(function(currentValue,currentIndex){return React.createElement(\"div\",{key:currentIndex},currentIndex===0?React.createElement(\"span\",null,\"Tech tags: \"):null,React.createElement(Button,{className:useStyle.tagButton},currentValue));})))))),props.renderHR&&React.createElement(\"hr\",null));}export default RenderItemWhole;","map":{"version":3,"sources":["I:/C0de/portfolio/portfolio/src/components/Projects/RenderItemWhole/renderItemWhole.js"],"names":["React","Fragment","useState","Box","ListItem","Grid","Card","CardActionArea","CardMedia","Button","Fab","ButtonGroup","Modal","Typography","makeStyles","FavoriteBorderIcon","ArrowForwardIosIcon","ImageModal","Fade","Thumbnail","cssStyles","theme","root","flexGrow","content","padding","listItem","marginBottom","debugStyle","borderStyle","paper","margin","borderRadius","maxWidth","maxHeight","textAlign","backgroundColor","boxShadow","tagButton","fontSize","color","borderColor","buttonGroup","flexWrap","test","objectFit","height","playButton","position","top","left","transform","opacity","RenderItemWhole","props","useStyle","showDialog","setShowDialog","handleCardClick","event","project","tileTile","media","title","description","projectLink","demoLink","process","env","PUBLIC_URL","thumbnail","tags","map","currentValue","currentIndex","renderHR"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport {\n  Box,\n  ListItem,\n  Grid,\n  Card,\n  CardActionArea,\n  CardMedia,\n  Button,\n  Fab,\n  ButtonGroup,\n  Modal,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ImageModal from \"./ImageModal\";\nimport Fade from \"react-reveal/Fade\";\nimport Thumbnail from \"./thumbnail/thumbnail\";\n\nconst cssStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  content: {\n    padding: \"10px\",\n  },\n  listItem: {\n    marginBottom: \"70px\",\n  },\n  debugStyle: {\n    borderStyle: \"solid\",\n    padding: \"10px\",\n  },\n  paper: {\n    margin: \"auto\",\n    borderRadius: \"2em\",\n    maxWidth: 768,\n    maxHeight: 1024,\n    textAlign: \"center\",\n    backgroundColor: \"#FFFFFF\",\n    boxShadow:\n      \"5px 5px 10px 10px rgba(154,160,185,.05), 0 15px 40px rgba(166,173,201,.2)\",\n    \"&:hover\": {\n      //Make play icon appear\n    },\n  },\n  tagButton: {\n    fontSize: \"12px\",\n    color: \"#39739d\",\n    backgroundColor: \"#e1ecf4\",\n    borderColor: \"#e1ecf4\",\n    margin: \"0.2rem\",\n  },\n  buttonGroup: {\n    flexWrap: \"wrap\",\n  },\n  test: {\n    objectFit: \"fill\",\n    height: \"350px\",\n  },\n  playButton: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    opacity: 0,\n    \"&:hover\": {\n      opacity: 1,\n    },\n  },\n}));\n\nfunction RenderItemWhole(props) {\n  const useStyle = cssStyles();\n  const [showDialog, setShowDialog] = useState(false);\n\n  const handleCardClick = (event) => {\n    // setShowDialog(showDialog => !showDialog);\n  };\n\n  return (\n    <Fragment>\n      <ListItem className={useStyle.listItem}>\n        <div className={useStyle.root}>\n          {showDialog && (\n            <ImageModal\n              path={props.project.tileTile.media}\n              handler={handleCardClick}\n            />\n          )}\n          <Grid container spacing={10} direction=\"row\">\n            <Grid item md={4} sm={12} xs={12}>\n              <h4>{props.project.tileTile.title}</h4>\n              {/* <p>{props.project.tileTile.description}</p> */}\n              <Typography variant={\"body1\"}>\n                <Box>{props.project.tileTile.description}</Box>\n              </Typography>\n              <Grid container>\n                <Grid item className={useStyle.content} md={12}>\n                  <Grid container direction=\"row\" spacing={3}>\n                    <Grid item md={6}>\n                      <Button\n                        variant=\"outlined\"\n                        target=\"_blank\"\n                        href={props.project.tileTile.projectLink}\n                      >\n                        GitHub\n                      </Button>\n                    </Grid>\n                    {props.project.tileTile.demoLink !== \"\" && (\n                      <Grid item md={6}>\n                        <Fab\n                          href={props.project.tileTile.demoLink}\n                          target=\"_blank\"\n                          variant=\"extended\"\n                          size=\"medium\"\n                          color=\"primary\"\n                        >\n                          Demo\n                          <ArrowForwardIosIcon fontSize=\"small\" />\n                        </Fab>\n                      </Grid>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Grid item md={8} sm={12} xs={12}>\n              <Card className={useStyle.paper}>\n                <CardActionArea onClick={handleCardClick}>\n                  <Thumbnail\n                    source={\n                      process.env.PUBLIC_URL + props.project.tileTile.thumbnail\n                    }\n                  />\n                </CardActionArea>\n              </Card>\n            </Grid>\n            <Grid item md={12}>\n              <ButtonGroup\n                className={useStyle.buttonGroup}\n                size=\"small\"\n                aria-label=\"small outlined button group\"\n              >\n                {props.project.tileTile.tags.map(\n                  (currentValue, currentIndex) => {\n                    return (\n                      <div key={currentIndex}>\n                        {currentIndex === 0 ? <span>Tech tags: </span> : null}\n                        <Button className={useStyle.tagButton}>\n                          {currentValue}\n                        </Button>\n                      </div>\n                    );\n                  }\n                )}\n              </ButtonGroup>\n            </Grid>\n          </Grid>\n        </div>\n      </ListItem>\n      {props.renderHR && <hr></hr>}\n    </Fragment>\n  );\n}\n\nexport default RenderItemWhole;\n"]},"metadata":{},"sourceType":"module"}