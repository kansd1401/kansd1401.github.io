{"ast":null,"code":"import _defineProperty from\"I:\\\\C0de\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"I:\\\\C0de\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"I:\\\\C0de\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"I:\\\\C0de\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{Grid,Container}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import Info from'./Info';import ContactCard from'./contactCard';import{NavHashLink as NavLink}from'react-router-hash-link';var styleHook=makeStyles(function(theme){return{container:{minHeight:\"100vh\",padding:\"50px\"}};});var INITIAL_STATE={name:\"\",email:\"\",subject:\"\",message:\"\",copyEmailStatus:false};function ContactContainer(props){var useStyle=styleHook();var _useState=useState(INITIAL_STATE),_useState2=_slicedToArray(_useState,2),emailInfo=_useState2[0],setEmailInfo=_useState2[1];var handleSubmit=function handleSubmit(evt){evt.preventDefault();alert(\"An email has been sent to \");console.log(emailInfo);var payload=Object.assign({},emailInfo);(function _callee(){var rawResponse;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(fetch('https://us-central1-microservices-264117.cloudfunctions.net/sendMessage',{method:'POST',headers:{'Accept':'application/json','Content-Type':'application/json'},body:JSON.stringify(payload)}));case 2:rawResponse=_context.sent;console.log(rawResponse);//! important\ncase 4:case\"end\":return _context.stop();}}});})();//Execute immidiately\nsetEmailInfo(INITIAL_STATE);};// # handeling state changes\n// ! for document purposes. We can choose to create individual functions to handle changes\n// const handleEmailChange = (val)=>{\n//   setEmailInfo((previousState) => ({ ...previousState, email: val }));\n// }\nvar handleChange=function handleChange(e){//? This 'if' only exists because i was too dumb to figure out best way to support the checkbox =/\nvar temp=e.target.type==='checkbox'?e.target.checked:e.target.value;if(e.target.type===\"checkbox\"){console.log(\"event is a checkbox\");setEmailInfo(function(previousState){return _objectSpread({},previousState,{copyEmailStatus:temp});});}else{var _e$target=e.target,name=_e$target.name,value=_e$target.value;setEmailInfo(function(previousState){return _objectSpread({},previousState,_defineProperty({},name,value));});}};return React.createElement(Fragment,null,React.createElement(Container,{id:\"contactContainer\",maxWidth:false,className:useStyle.container},React.createElement(Grid,{container:true,justify:\"center\",spacing:5},React.createElement(Grid,{item:true,md:6},React.createElement(Info,null)))));}export default ContactContainer;","map":{"version":3,"sources":["I:/C0de/portfolio/src/components/Contact/contactContainer.js"],"names":["React","Fragment","useState","Grid","Container","makeStyles","Info","ContactCard","NavHashLink","NavLink","styleHook","theme","container","minHeight","padding","INITIAL_STATE","name","email","subject","message","copyEmailStatus","ContactContainer","props","useStyle","emailInfo","setEmailInfo","handleSubmit","evt","preventDefault","alert","console","log","payload","Object","assign","fetch","method","headers","body","JSON","stringify","rawResponse","handleChange","e","temp","target","type","checked","value","previousState"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Grid,  Container } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Info from './Info';\r\nimport ContactCard from './contactCard';\r\nimport { NavHashLink as NavLink } from 'react-router-hash-link';\r\n\r\n\r\n\r\nconst styleHook = makeStyles(theme => ({\r\n  container: {\r\n    minHeight: \"100vh\",\r\n    padding: \"50px\"\r\n  },\r\n}));\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  email: \"\",\r\n  subject: \"\",\r\n  message: \"\",\r\n  copyEmailStatus: false\r\n}\r\n\r\nfunction ContactContainer(props) {\r\n  const useStyle = styleHook();\r\n\r\n  const [emailInfo, setEmailInfo] = useState(INITIAL_STATE);\r\n\r\n\r\n  const handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    alert(`An email has been sent to `);\r\n\r\n    console.log(emailInfo);\r\n\r\n    const payload = Object.assign({}, emailInfo);\r\n\r\n    (async () => {\r\n      const rawResponse = await fetch('https://us-central1-microservices-264117.cloudfunctions.net/sendMessage', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(payload)\r\n      });\r\n\r\n      console.log(rawResponse);//! important\r\n\r\n    })(); //Execute immidiately\r\n\r\n    setEmailInfo(INITIAL_STATE);\r\n  }\r\n\r\n\r\n  // # handeling state changes\r\n  // ! for document purposes. We can choose to create individual functions to handle changes\r\n  // const handleEmailChange = (val)=>{\r\n  //   setEmailInfo((previousState) => ({ ...previousState, email: val }));\r\n  // }\r\n\r\n\r\n  const handleChange = e => {\r\n\r\n    //? This 'if' only exists because i was too dumb to figure out best way to support the checkbox =/\r\n    const temp = e.target.type === 'checkbox' ? e.target.checked : e.target.value;\r\n    if (e.target.type === \"checkbox\") {\r\n      console.log(\"event is a checkbox\")\r\n      setEmailInfo((previousState) => ({ ...previousState, copyEmailStatus: temp }));\r\n    }\r\n    else {\r\n      const { name, value } = e.target;\r\n      setEmailInfo((previousState) => ({ ...previousState, [name]: value }));\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container id=\"contactContainer\" maxWidth={false} className={useStyle.container}>\r\n        <Grid container justify=\"center\" spacing={5} >\r\n          <Grid item md={6}>\r\n            <Info />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default ContactContainer;"]},"metadata":{},"sourceType":"module"}