{"ast":null,"code":"import _objectSpread from \"I:\\\\C0de\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"I:\\\\C0de\\\\portfolio\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"I:\\\\C0de\\\\portfolio\\\\src\\\\components\\\\Nav\\\\NavDrawer.js\";\nimport React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport NavBarSelf from \"./NavBarSelf\";\nconst useStyles = makeStyles({\n  list: {\n    width: 240,\n    paddingTop: \"18px\"\n  },\n  menuIcon: {\n    padding: \"10px\"\n  }\n});\nexport default function NavDrawer() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState({\n    left: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState(_objectSpread({}, state, {\n      [side]: open\n    }));\n  };\n\n  const sideList = side => React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: toggleDrawer(side, false),\n    onKeyDown: toggleDrawer(side, false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(NavBarSelf, {\n    display: \"mobile\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }));\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleDrawer(\"left\", true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    className: classes.menuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(Drawer, {\n    open: state.left,\n    onClose: toggleDrawer(\"left\", false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, sideList(\"left\")));\n}","map":{"version":3,"sources":["I:/C0de/portfolio/src/components/Nav/NavDrawer.js"],"names":["React","Fragment","makeStyles","Drawer","Button","Divider","MenuIcon","NavBarSelf","useStyles","list","width","paddingTop","menuIcon","padding","NavDrawer","classes","useState","left","state","setState","toggleDrawer","side","open","event","type","key","sideList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,SAAS,GAAGN,UAAU,CAAC;AAC3BO,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,UAAU,EAAE;AAFR,GADqB;AAK3BC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAC;AADA;AALiB,CAAD,CAA5B;AAUA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;;AADkC,0BAGRR,KAAK,CAACgB,QAAN,CAAe;AACvCC,IAAAA,IAAI,EAAE;AADiC,GAAf,CAHQ;AAAA;AAAA,QAG3BC,KAH2B;AAAA,QAGpBC,QAHoB;;AAOlC,QAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgBC,KAAK,IAAI;AAC5C,QACEA,KAAK,CAACC,IAAN,KAAe,SAAf,KACCD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OADtC,CADF,EAGE;AACA;AACD;;AAEDN,IAAAA,QAAQ,mBAAMD,KAAN;AAAa,OAACG,IAAD,GAAQC;AAArB,OAAR;AACD,GATD;;AAWA,QAAMI,QAAQ,GAAGL,IAAI,IACnB;AACE,IAAA,SAAS,EAAEN,OAAO,CAACN,IADrB;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,OAAO,EAAEW,YAAY,CAACC,IAAD,EAAO,KAAP,CAHvB;AAIE,IAAA,SAAS,EAAED,YAAY,CAACC,IAAD,EAAO,KAAP,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;;AAYA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,YAAY,CAAC,MAAD,EAAS,IAAT,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAEL,OAAO,CAACH,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA,EAIA,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAEM,KAAK,CAACD,IAApB;AAA0B,IAAA,OAAO,EAAEG,YAAY,CAAC,MAAD,EAAS,KAAT,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGM,QAAQ,CAAC,MAAD,CADX,CAJA,CADJ;AAUD","sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NavBarSelf from \"./NavBarSelf\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 240,\r\n    paddingTop: \"18px\"\r\n  },\r\n  menuIcon: {\r\n    padding:\"10px\"\r\n  }\r\n});\r\n\r\nexport default function NavDrawer() {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = React.useState({\r\n    left: false\r\n  });\r\n\r\n  const toggleDrawer = (side, open) => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = side => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n        <NavBarSelf display=\"mobile\"></NavBarSelf>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return (\r\n      <Fragment>\r\n      <Button onClick={toggleDrawer(\"left\", true)}>\r\n      <MenuIcon className={classes.menuIcon}></MenuIcon>\r\n      </Button>\r\n      <Drawer open={state.left} onClose={toggleDrawer(\"left\", false)}>\r\n        {sideList(\"left\")}\r\n      </Drawer>\r\n      </Fragment>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}