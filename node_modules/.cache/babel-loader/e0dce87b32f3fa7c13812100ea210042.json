{"ast":null,"code":"import _slicedToArray from\"/home/sanji/lighthouse/portfolio/kansd1401.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import{Box,ListItem,Grid,Card,CardActionArea,CardMedia,Button,Fab,ButtonGroup,Modal,Typography}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import FavoriteBorderIcon from'@material-ui/icons/FavoriteBorder';import ArrowForwardIosIcon from'@material-ui/icons/ArrowForwardIos';import ImageModal from'./ImageModal';import Fade from'react-reveal/Fade';import Thumbnail from'./thumbnail/thumbnail';var cssStyles=makeStyles(function(theme){return{root:{flexGrow:1},content:{padding:\"10px\"},listItem:{marginBottom:\"70px\"},debugStyle:{borderStyle:\"solid\",padding:\"10px\"},paper:{margin:\"auto\",borderRadius:\"2em\",maxWidth:768,maxHeight:1024,textAlign:\"center\",backgroundColor:\"#FFFFFF\",boxShadow:\"5px 5px 10px 10px rgba(154,160,185,.05), 0 15px 40px rgba(166,173,201,.2)\",'&:hover':{//Make play icon appear\n}},tagButton:{fontSize:\"12px\",color:\"#39739d\",backgroundColor:\"#e1ecf4\",borderColor:\"#e1ecf4\"},buttonGroup:{flexWrap:\"wrap\"},test:{objectFit:\"fill\",height:\"350px\"},playButton:{position:\"absolute\",top:\"50%\",left:\"50%\",transform:\"translate(-50%, -50%)\",opacity:0,'&:hover':{opacity:1}}};});function RenderItemWhole(props){var useStyle=cssStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showDialog=_useState2[0],setShowDialog=_useState2[1];var handleCardClick=function handleCardClick(event){// setShowDialog(showDialog => !showDialog);\n};return React.createElement(Fragment,null,React.createElement(ListItem,{className:useStyle.listItem},React.createElement(\"div\",{className:useStyle.root},showDialog&&React.createElement(ImageModal,{path:props.project.tileTile.media,handler:handleCardClick}),React.createElement(Grid,{container:true,spacing:10,direction:\"row\"},React.createElement(Grid,{item:true,md:4,sm:12,xs:12},React.createElement(\"h4\",null,props.project.tileTile.title),React.createElement(Typography,{variant:\"body1\"},React.createElement(Box,null,props.project.tileTile.description)),React.createElement(Grid,{container:true},React.createElement(Grid,{item:true,className:useStyle.content,md:12},React.createElement(Grid,{container:true,direction:\"row\",spacing:3},React.createElement(Grid,{item:true,md:6},React.createElement(Button,{variant:\"outlined\",target:\"_blank\",href:props.project.tileTile.projectLink},\"GitHub\")),props.project.tileTile.demoLink!==\"\"&&React.createElement(Grid,{item:true,md:6},React.createElement(Fab,{href:props.project.tileTile.demoLink,target:\"_blank\",variant:\"extended\",size:\"medium\",color:\"primary\"},\"Demo\",React.createElement(ArrowForwardIosIcon,{fontSize:\"small\"}))))))),React.createElement(Grid,{item:true,md:8,sm:12,xs:12},React.createElement(Card,{className:useStyle.paper},React.createElement(CardActionArea,{onClick:handleCardClick},React.createElement(Thumbnail,{source:process.env.PUBLIC_URL+props.project.tileTile.thumbnail})))),React.createElement(Grid,{item:true,md:12},React.createElement(ButtonGroup,{className:useStyle.buttonGroup,size:\"small\",\"aria-label\":\"small outlined button group\"},props.project.tileTile.tags.map(function(currentValue,currentIndex){return React.createElement(\"div\",{key:currentIndex},currentIndex===0?React.createElement(\"span\",null,\"Tech tags: \"):null,React.createElement(Button,{className:useStyle.tagButton},currentValue));})))))),props.renderHR&&React.createElement(\"hr\",null));}export default RenderItemWhole;","map":{"version":3,"sources":["/home/sanji/lighthouse/portfolio/kansd1401.github.io/src/components/Projects/RenderItemWhole/renderItemWhole.js"],"names":["React","Fragment","useState","Box","ListItem","Grid","Card","CardActionArea","CardMedia","Button","Fab","ButtonGroup","Modal","Typography","makeStyles","FavoriteBorderIcon","ArrowForwardIosIcon","ImageModal","Fade","Thumbnail","cssStyles","theme","root","flexGrow","content","padding","listItem","marginBottom","debugStyle","borderStyle","paper","margin","borderRadius","maxWidth","maxHeight","textAlign","backgroundColor","boxShadow","tagButton","fontSize","color","borderColor","buttonGroup","flexWrap","test","objectFit","height","playButton","position","top","left","transform","opacity","RenderItemWhole","props","useStyle","showDialog","setShowDialog","handleCardClick","event","project","tileTile","media","title","description","projectLink","demoLink","process","env","PUBLIC_URL","thumbnail","tags","map","currentValue","currentIndex","renderHR"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport {Box, ListItem, Grid, Card, CardActionArea, CardMedia, Button, Fab, ButtonGroup, Modal, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ImageModal from './ImageModal';\nimport Fade from 'react-reveal/Fade';\nimport Thumbnail from './thumbnail/thumbnail';\n\n\nconst cssStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    content: {\n        padding: \"10px\",\n    },\n    listItem: {\n        marginBottom: \"70px\"\n    },\n    debugStyle: {\n        borderStyle: \"solid\",\n        padding: \"10px\",\n    },\n    paper: {\n        margin: \"auto\",\n        borderRadius: \"2em\",\n        maxWidth: 768,\n        maxHeight: 1024,\n        textAlign: \"center\",\n        backgroundColor: \"#FFFFFF\",\n        boxShadow: \"5px 5px 10px 10px rgba(154,160,185,.05), 0 15px 40px rgba(166,173,201,.2)\",\n        '&:hover':{\n            //Make play icon appear\n        }\n    },\n    tagButton: {\n        fontSize: \"12px\",\n        color: \"#39739d\",\n        backgroundColor: \"#e1ecf4\",\n        borderColor: \"#e1ecf4\",\n    },\n    buttonGroup: {\n        flexWrap: \"wrap\"\n    },\n    test:{\n        objectFit:\"fill\",\n        height:\"350px\",\n    },\n    playButton:{\n        position: \"absolute\",\n        top : \"50%\",\n        left : \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        opacity: 0,\n        '&:hover':{\n            opacity: 1\n        }\n    }\n}))\n\nfunction RenderItemWhole(props) {\n    const useStyle = cssStyles();\n    const [showDialog, setShowDialog] = useState(false);\n\n    const handleCardClick = (event) => {\n        // setShowDialog(showDialog => !showDialog);\n    }\n\n    return (<Fragment>\n            <ListItem className={useStyle.listItem}>\n                <div className={useStyle.root}>\n                    {showDialog && <ImageModal path={props.project.tileTile.media} handler={handleCardClick} />}\n                    <Grid container spacing={10} direction=\"row\">\n                        <Grid item md={4} sm={12} xs={12}>\n                            <h4>{props.project.tileTile.title}</h4>\n                            {/* <p>{props.project.tileTile.description}</p> */}\n                            <Typography variant={\"body1\"}><Box >{props.project.tileTile.description}</Box></Typography>\n                            <Grid container >\n                                <Grid item className={useStyle.content} md={12}>\n                                    <Grid container direction=\"row\" spacing={3}>\n                                        <Grid item md={6}>\n                                            <Button variant=\"outlined\" target=\"_blank\" href={props.project.tileTile.projectLink}>GitHub</Button>\n                                        </Grid>\n                                        {props.project.tileTile.demoLink !== \"\" && <Grid item md={6}>\n                                            <Fab href={props.project.tileTile.demoLink} target=\"_blank\" variant=\"extended\" size=\"medium\" color=\"primary\">\n                                                Demo\n                                        <ArrowForwardIosIcon fontSize=\"small\" />\n                                            </Fab>\n                                        </Grid>}\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item md={8} sm={12} xs={12}>\n                            <Card className={useStyle.paper}>\n                                 <CardActionArea onClick={handleCardClick}>\n                                     <Thumbnail source={process.env.PUBLIC_URL + props.project.tileTile.thumbnail} />\n                                </CardActionArea>\n                            </Card>\n                        </Grid>\n                        <Grid item md={12}>\n                            <ButtonGroup className={useStyle.buttonGroup} size=\"small\" aria-label=\"small outlined button group\">\n                                {\n                                    props.project.tileTile.tags.map((currentValue, currentIndex) => {\n                                        return (<div key={currentIndex}>\n                                            {(currentIndex === 0) ? <span>Tech tags: </span> : null}\n                                            <Button className={useStyle.tagButton}>{currentValue}</Button>\n                                        </div>)\n                                    })\n                                }\n                            </ButtonGroup>\n                        </Grid>\n                    </Grid>\n                </div>\n            </ListItem>\n        {props.renderHR && <hr></hr>}\n    </Fragment>);\n}\n\nexport default RenderItemWhole;"]},"metadata":{},"sourceType":"module"}